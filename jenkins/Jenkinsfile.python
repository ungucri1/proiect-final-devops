pipeline {
	agent any


	environment {
		IMAGE_NAME = 'ungucri0103/backup'
		IMAGE_TAG = 'latest'
		TARGET_HOST = '192.168.1.195'
		TARGET_USER = 'ansibleuser'
		REPO_URL 	= 'https://github.com/ungucri1/proiect-final-devops.git'
	}


	stages {
		stage('lint Python') {
			steps {
				sh 'python3 -m py_compile backup.py'
			}
		}

		stage('run tests') {
			steps {
				sh 'python3 -m unittest discover -s tests -p "*.py" || echo "No tests found"'

			}
		}


		stage('build & push on target') {
			steps {
        		withCredentials([
          			usernamePassword(credentialsId: 'parola-dockerhub', usernameVariable: 'DH_USER', passwordVariable: 'DH_PASS'),
          			sshUserPrivateKey(credentialsId: 'target-ssh', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')
        ]) {
          script {
            def privateKeyText = readFile(file: "${SSH_KEY}")

            def remote = [
              name:           'target',
              host:           "${TARGET_HOST}",
              user:           "${SSH_USER}",
              allowAnyHosts:  true,
              identity:       privateKeyText
            ]

            sshCommand remote: remote, command: "rm -rf ~/ci-build || true"
            sshCommand remote: remote, command: "git clone ${REPO_URL} ~/ci-build"
            sshCommand remote: remote, command: "cd ~/ci-build/app/backup && docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
            sshCommand remote: remote, command: "echo '${DH_PASS}' | docker login -u '${DH_USER}' --password-stdin"
            sshCommand remote: remote, command: "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
          }
        }
      }
    }
  }
}